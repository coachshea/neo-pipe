*neopipe.txt*    Pipe text through shell command, see the results.

              #     # ####### ####### ######  ### ######  ####### 
              ##    # #       #     # #     #  #  #     # #       
              # #   # #       #     # #     #  #  #     # #       
              #  #  # #####   #     # ######   #  ######  #####   
              #   # # #       #     # #        #  #       #       
              #    ## #       #     # #        #  #       #       
              #     # ####### ####### #       ### #       ####### 
                                                                  

Author:  John Shea <coachshea@fastmail.com>

==========================================================================
Contents

  Introduction ............................. |neopipe-intro|
  Configuration ............................ |neopipe-configuration|
    npipe_command .......................... |neopipe-npipe_com|
    npipe_filetype ......................... |neopipe-npipe_ft|
    npipe_split ............................ |neopipe-npipe_split|
  Commands ................................. |neopipe-commands|
    NeoPipe ................................ |neopipe-:NeoPipe|
    NeoPipeClear ........................... |neopipe-:NeoPipeClear|
    NeoPipeClose ........................... |neopipe-:NeoPipeClose|
  Examples ................................. |neopipe-examples|
  About .................................... |neopipe-about|

==========================================================================
INTRODUCTION                                    *neopipe-intro*

neopipe sends the current buffer to a shell command, and instantly displays
the output.

==========================================================================
CONFIGURATION                                   *neopipe-configuration*

                                *neopipe-npipe_com*
npipe_com           Set this to any shell command that will take the
                    contents of your buffer on STDIN, and eturn the
                    result on STDOUT.

                                *neopipe-pipe_type*
npipe_type          Specifies how to run |neopipe-npipe_com|. Set to 'c' for
                    meaning |neopipe-npipe_com| will be run once and all
                    further text will run through it's output. 


                                *neopipe-npipe_ft*
npipe_ft            The filetype of the output buffer. Useful for syntax
                    highlighting of the result, or running arbitrary
                    autocommands against it.

                                *neopipe-npipe_append*
npipe_append        Whether to append text to the output buffer on each
                    invocation or to clear the buffer each time. Possible
                    values are "top" (appned each output to the top of the
                    buffer), "bottom" (appned each output to the bottom of
                    the buffer), any other value (i.e. 0, 1, "clear", '',
                    etc) instructs neopope to clear the buffer on each
                    invocation.

                                *neopipe-npipe_split*
npipe_split         How to display the scratch buffer.


==========================================================================
COMMANDS                                        *neopipe-commands*

VimPipe offers three commands.

                                *neopipe-:NeoPipe*
NeoPipe             Run lines of text through the command

Send the selected contents (entire buffer by defualt)
through the command specified by |neopipe-npipe_com|
and displays the results. The buffer does not need to be
saved first.

                                *neopipe-:NeoPipeClear*
NeoPipeClear        Clear the scractch buffer

                                *neopipe-:NeoPipeClose*
NeoPipeClose        Close the scratch buffer.

==========================================================================
EXAMPLES                                         *neopipe-examples*

The following are possible configurations. These can be set globally or on a
per-project bases:

// compile livescript
"*.ls": {
  "pipe_com": "lsc -cbp",
  "pipe_ft": "javascript"
}

// compile jade to javascript
"src/*.jade": {
  "pipe_com": "jade -c",
  "pipe_ft": "javascript"
}

// compile jade to html
"views/*.jade": {
  "pipe_com": "jade -P",
  "pipe_ft": "html"
}

// connect to a mongodb instance
"*.mongo": {
  "pipe_com": "mongo db/test.db",
  "pipe_ft": "javascript"
}

// connect to a mongodb instance with livescript
"*.mongo": {
  "pipe_com": "lsc -cpb | mongo",
  "pipe_ft": "javascript"
}

// view assembly for c files
"*.c": {
  "pipe_com": "gcc -S -xc -c -o - -",
  "pipe_ft": "asm"
}

// connect to a sqlite3 database with comments
"db/*.sql": {
  "pipe_com": "sqlite2 ~/mydata.db",
  "pip_search_start": "^\#",
  "pipe_start_adjust": 1
}

==========================================================================
ABOUT                                           *neopipe-about*

Grab the latest version or report a bug on GitHub:

http://github.com/coachshea/neopipe

vim:tw=78:et:ft=help:norl:
